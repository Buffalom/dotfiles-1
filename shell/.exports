#!/usr/bin/env bash

# Load Homebrew (M1)
eval "$(/opt/homebrew/bin/brew shellenv)"


# Make vim the default editor
export EDITOR="vim"

# Highlight section titles in manual pages
export LESS_TERMCAP_md="$ORANGE"

# Donâ€™t clear the screen after quitting a manual page
export MANPAGER="less -X"

# Config autosuggest color
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=5'

# setup fzf
export FZF_DEFAULT_OPTS="--bind='ctrl-o:execute(code {})+abort'"
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Composer
export PATH="$HOME/bin:/usr/local/bin:$HOME/.composer/vendor/bin:$PATH"
# export PATH="$PATH:$(composer config -g home)/vendor/bin"
export COMPOSER_MEMORY_LIMIT=-1

# Google SDK
export PATH="/Users/${USER}/google-cloud-sdk/bin:$PATH"

# Tools
export PATH="/Users/${USER}/Code/tools:$PATH"

# Android SDK
export ANDROID_HOME="/Users/${USER}/Library/Android/sdk"
export PATH="$PATH:$HOME/Library/Android/sdk/platform-tools"
export PATH="/Users/${USER}/Library/Android/sdk/emulator:$PATH"

# Go
export GOPATH=$HOME/Code/go-workspace
# export GOROOT=/usr/local/opt/go/libexec
export PATH=$PATH:$GOPATH/bin
export PATH="/usr/local/sbin:$PATH"

# Prefer US English and use UTF-8
export LANG="en_US.UTF-8"
export LC_MESSAGES="en_US.UTF-8"
# export LC_ALL="en_US.UTF-8"

# fix Setting locale failed error
export LC_CTYPE=en_US.utf-8

# node
export PATH="/usr/local/opt/node@8/bin:$PATH"

# Flutter
export PATH="$PATH:$HOME/Code/tools/flutter/bin"

# Python
export PATH="$PATH:$HOME/Library/Python/3.10/bin"

# dotnet cli tools
export PATH="$PATH:/Users/okaufmann/.dotnet/tools"

# krew
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

# include custom scripts
export PATH="$PATH:$DOTFILES/shell/.scripts"

# dont update all other packages when installing a new brew package
# https://github.com/Homebrew/brew/blob/7d31a70373edae4d8e78d91a4cbc05324bebc3ba/Library/Homebrew/manpages/brew.1.md.erb#L202
export HOMEBREW_NO_AUTO_UPDATE=1

# NVM
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" # This loads nvm

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# import nvm global bin folder for CLI tools
currentNvm=$(nvm which current)
export PATH="$(dirname $currentNvm):$PATH"
unset currentNvm

# place this after nvm initialization!
autoload -U add-zsh-hook

load-nvmrc() {
  local nvmrc_path
  nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version
    nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$(nvm version)" ]; then
      nvm use
    fi
  elif [ -n "$(PWD=$OLDPWD nvm_find_nvmrc)" ] && [ "$(nvm version)" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}

# ensure `nvm use` is run when changing directories
add-zsh-hook chpwd load-nvmrc
load-nvmrc

# pnpm
export PNPM_HOME="/Users/okaufmann/Library/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end

# if kubectl is available, source completions
command -v flux >/dev/null && . <(flux completion zsh)
which velero &>/dev/null && source <(velero completion zsh)
which kubectl &>/dev/null && source <(kubectl completion zsh)
which argocd &>/dev/null && source <(argocd completion zsh)
export KUBE_EDITOR='code --wait'
export TALOS_EDITOR='code --wait'

# this is needed as the 1Password ssh agent is readonly
export TELEPORT_USE_LOCAL_SSH_AGENT=false

export BAT_THEME="Coldark-Dark"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
[ -f ~/.iterm2_shell_integration.zsh ] && source ~/.iterm2_shell_integration.zsh
